package com.rm2pt.generator.cloudedgecollaboration.generator.zzy;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class ServiceTemplate {
  public CharSequence context() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("type context struct {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// config is private");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("cloudDB           *sqlx.DB");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("edgeDBMap         map[string]*sqlx.DB");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mqttClient        mqtt.Client //todo");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("noticeDoctorTopic string");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("func newContext(config config.CloudServiceConf) *context {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("edgeDBMap := make(map[string]*sqlx.DB)");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("for _, e := range config.Edges {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("edgeDBMap[e.EdgeId] = common.NewMysqlDB(e.DataSource)");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return &context{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("cloudDB:   common.NewMysqlDB(config.CloudDataSource),");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("edgeDBMap: edgeDBMap,");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("func NewServices(conf config.CloudServiceConf) (doctorSvc *Doctor, patientSvc *Patient) {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("context := newContext(conf)");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("doctorSvc = &Doctor{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("context: context,");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("patientSvc = &Patient{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("context: context,");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    return _builder;
  }
}
